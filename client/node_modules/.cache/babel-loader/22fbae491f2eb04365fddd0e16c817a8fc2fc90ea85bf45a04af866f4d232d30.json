{"ast":null,"code":"var _jsxFileName = \"/Users/dilnaz/Documents/GitHub/task1/client/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import {BrowserRouter, Routes, Route} from 'react-router-dom'\n// import Home from './pages/Home'\n// import Navbar from './components/Navbar';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <BrowserRouter>\n//         <Navbar setCategory={setCategory} />\n//         <div className='pages'>\n//           <Routes>\n//             <Route path = \"/\" element = {<Home/>} />\n//           </Routes>\n//         </div>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [category, setCategory] = useState('planets');\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setCategory: setCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          category: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+qrhwGvGkrKhaNQSqeLwq3MciSs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navbar","Home","jsxDEV","_jsxDEV","App","_s","category","setCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/dilnaz/Documents/GitHub/task1/client/src/App.js"],"sourcesContent":["// import React from 'react'\n// import {BrowserRouter, Routes, Route} from 'react-router-dom'\n// import Home from './pages/Home'\n// import Navbar from './components/Navbar';\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <BrowserRouter>\n//         <Navbar setCategory={setCategory} />\n//         <div className='pages'>\n//           <Routes>\n//             <Route path = \"/\" element = {<Home/>} />\n//           </Routes>\n//         </div>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\n\nconst App = () => {\n  const [category, setCategory] = useState('planets');\n\n  return (\n    <Router>\n      <Navbar setCategory={setCategory} />\n      <Routes>\n        <Route path=\"/\" element={<Home category={category} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,SAAS,CAAC;EAEnD,oBACEQ,OAAA,CAACN,MAAM;IAAAW,QAAA,gBACLL,OAAA,CAACH,MAAM;MAACO,WAAW,EAAEA;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCT,OAAA,CAACJ,MAAM;MAAAS,QAAA,eACLL,OAAA,CAACL,KAAK;QAACe,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEX,OAAA,CAACF,IAAI;UAACK,QAAQ,EAAEA;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACP,EAAA,CAXID,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAaT,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}