{"ast":null,"code":"var _jsxFileName = \"/Users/dilnaz/Documents/GitHub/task1/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\n// // src/pages/Home.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Home = () => {\n//   const [planets, setPlanets] = useState([]);\n//   const [keyword, setKeyword] = useState('');\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   // Fetch all planets when the component mounts\n//   useEffect(() => {\n//     const fetchPlanets = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:4000/api/planets');\n//         setPlanets(response.data);\n//       } catch (error) {\n//         console.error('Error fetching planets:', error);\n//       }\n//     };\n//     fetchPlanets();\n//   }, []);\n\n//   // Handle search\n//   const handleSearch = async (e) => {\n//     e.preventDefault();\n//     if (keyword.trim() === '') {\n//       setSearchResults([]);\n//       return;\n//     }\n//     try {\n//       const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${keyword}`);\n//       setSearchResults(response.data);\n//     } catch (error) {\n//       console.error('Error searching planets:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Planets Catalog</h1>\n//       <form onSubmit={handleSearch}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search planets...\"\n//           value={keyword}\n//           onChange={(e) => setKeyword(e.target.value)}\n//         />\n//         <button type=\"submit\">Search</button>\n//       </form>\n//       <div>\n//         {searchResults.length > 0 ? (\n//           <div>\n//             <h2>Search Results:</h2>\n//             <ul>\n//               {searchResults.map((planet) => (\n//                 <li key={planet._id}>\n//                   <h3>{planet.name}</h3>\n//                   <p>Climate: {planet.climate}</p>\n//                   <p>Terrain: {planet.terrain}</p>\n//                   <p>Population: {planet.population}</p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         ) : (\n//           <div>\n//             <h2>All Planets:</h2>\n//             <ul>\n//               {planets.map((planet) => (\n//                 <li key={planet._id}>\n//                   <h3>{planet.name}</h3>\n//                   <p>Climate: {planet.climate}</p>\n//                   <p>Terrain: {planet.terrain}</p>\n//                   <p>Population: {planet.population}</p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n// src/pages/Home.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [keyword, setKeyword] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Fetch all planets when the component mounts\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await axios.get('/api/planets');\n        setPlanets(response.data);\n      } catch (error) {\n        console.error('Error fetching planets:', error);\n      }\n    };\n    fetchPlanets();\n  }, []);\n\n  // Handle search\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (keyword.trim() === '') {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${keyword}`);\n      setSearchResults(response.data);\n    } catch (error) {\n      console.error('Error searching planets:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Planets Catalog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search planets...\",\n        value: keyword,\n        onChange: e => setKeyword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: searchResults.map(planet => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: planet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Climate: \", planet.climate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Terrain: \", planet.terrain]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Population: \", planet.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)]\n          }, planet._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"All Planets:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: planets.map(planet => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: planet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Climate: \", planet.climate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Terrain: \", planet.terrain]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Population: \", planet.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)]\n          }, planet._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"yl80ahh5s7l+cCkXno57vVWhEUI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Home","_s","planets","setPlanets","keyword","setKeyword","searchResults","setSearchResults","fetchPlanets","response","get","data","error","console","handleSearch","e","preventDefault","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","map","planet","name","climate","terrain","population","_id","_c","$RefreshReg$"],"sources":["/Users/dilnaz/Documents/GitHub/task1/client/src/pages/Home.js"],"sourcesContent":["// // src/pages/Home.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Home = () => {\n//   const [planets, setPlanets] = useState([]);\n//   const [keyword, setKeyword] = useState('');\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   // Fetch all planets when the component mounts\n//   useEffect(() => {\n//     const fetchPlanets = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:4000/api/planets');\n//         setPlanets(response.data);\n//       } catch (error) {\n//         console.error('Error fetching planets:', error);\n//       }\n//     };\n//     fetchPlanets();\n//   }, []);\n\n//   // Handle search\n//   const handleSearch = async (e) => {\n//     e.preventDefault();\n//     if (keyword.trim() === '') {\n//       setSearchResults([]);\n//       return;\n//     }\n//     try {\n//       const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${keyword}`);\n//       setSearchResults(response.data);\n//     } catch (error) {\n//       console.error('Error searching planets:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Planets Catalog</h1>\n//       <form onSubmit={handleSearch}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search planets...\"\n//           value={keyword}\n//           onChange={(e) => setKeyword(e.target.value)}\n//         />\n//         <button type=\"submit\">Search</button>\n//       </form>\n//       <div>\n//         {searchResults.length > 0 ? (\n//           <div>\n//             <h2>Search Results:</h2>\n//             <ul>\n//               {searchResults.map((planet) => (\n//                 <li key={planet._id}>\n//                   <h3>{planet.name}</h3>\n//                   <p>Climate: {planet.climate}</p>\n//                   <p>Terrain: {planet.terrain}</p>\n//                   <p>Population: {planet.population}</p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         ) : (\n//           <div>\n//             <h2>All Planets:</h2>\n//             <ul>\n//               {planets.map((planet) => (\n//                 <li key={planet._id}>\n//                   <h3>{planet.name}</h3>\n//                   <p>Climate: {planet.climate}</p>\n//                   <p>Terrain: {planet.terrain}</p>\n//                   <p>Population: {planet.population}</p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n// src/pages/Home.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Home = () => {\n  const [planets, setPlanets] = useState([]);\n  const [keyword, setKeyword] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Fetch all planets when the component mounts\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await axios.get('/api/planets');\n        setPlanets(response.data);\n      } catch (error) {\n        console.error('Error fetching planets:', error);\n      }\n    };\n    fetchPlanets();\n  }, []);\n\n  // Handle search\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (keyword.trim() === '') {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${keyword}`);\n      setSearchResults(response.data);\n    } catch (error) {\n      console.error('Error searching planets:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Planets Catalog</h1>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"Search planets...\"\n          value={keyword}\n          onChange={(e) => setKeyword(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        {searchResults.length > 0 ? (\n          <div>\n            <h2>Search Results:</h2>\n            <ul>\n              {searchResults.map((planet) => (\n                <li key={planet._id}>\n                  <h3>{planet.name}</h3>\n                  <p>Climate: {planet.climate}</p>\n                  <p>Terrain: {planet.terrain}</p>\n                  <p>Population: {planet.population}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div>\n            <h2>All Planets:</h2>\n            <ul>\n              {planets.map((planet) => (\n                <li key={planet._id}>\n                  <h3>{planet.name}</h3>\n                  <p>Climate: {planet.climate}</p>\n                  <p>Terrain: {planet.terrain}</p>\n                  <p>Population: {planet.population}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}