{"ast":null,"code":"var _jsxFileName = \"/Users/dilnaz/Documents/GitHub/task1/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\n// // // src/pages/Home.js\n// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n\n// // const Home = () => {\n// //   const [planets, setPlanets] = useState([]);\n// //   const [keyword, setKeyword] = useState('');\n// //   const [searchResults, setSearchResults] = useState([]);\n\n// //   // Fetch all planets when the component mounts\n// //   useEffect(() => {\n// //     const fetchPlanets = async () => {\n// //       try {\n// //         const response = await axios.get('http://localhost:4000/api/planets');\n// //         setPlanets(response.data);\n// //       } catch (error) {\n// //         console.error('Error fetching planets:', error);\n// //       }\n// //     };\n// //     fetchPlanets();\n// //   }, []);\n\n// //   // Handle search\n// //   const handleSearch = async (e) => {\n// //     e.preventDefault();\n// //     if (keyword.trim() === '') {\n// //       setSearchResults([]);\n// //       return;\n// //     }\n// //     try {\n// //       const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${keyword}`);\n// //       setSearchResults(response.data);\n// //     } catch (error) {\n// //       console.error('Error searching planets:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h1>Planets Catalog</h1>\n// //       <form onSubmit={handleSearch}>\n// //         <input\n// //           type=\"text\"\n// //           placeholder=\"Search planets...\"\n// //           value={keyword}\n// //           onChange={(e) => setKeyword(e.target.value)}\n// //         />\n// //         <button type=\"submit\">Search</button>\n// //       </form>\n// //       <div>\n// //         {searchResults.length > 0 ? (\n// //           <div>\n// //             <h2>Search Results:</h2>\n// //             <ul>\n// //               {searchResults.map((planet) => (\n// //                 <li key={planet._id}>\n// //                   <h3>{planet.name}</h3>\n// //                   <p>Climate: {planet.climate}</p>\n// //                   <p>Terrain: {planet.terrain}</p>\n// //                   <p>Population: {planet.population}</p>\n// //                 </li>\n// //               ))}\n// //             </ul>\n// //           </div>\n// //         ) : (\n// //           <div>\n// //             <h2>All Planets:</h2>\n// //             <ul>\n// //               {planets.map((planet) => (\n// //                 <li key={planet._id}>\n// //                   <h3>{planet.name}</h3>\n// //                   <p>Climate: {planet.climate}</p>\n// //                   <p>Terrain: {planet.terrain}</p>\n// //                   <p>Population: {planet.population}</p>\n// //                 </li>\n// //               ))}\n// //             </ul>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Home;\n// // src/pages/Home.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Home = () => {\n//   const [planets, setPlanets] = useState([]);\n//   const [keyword, setKeyword] = useState('');\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   // Fetch all planets when the component mounts\n//   useEffect(() => {\n//     const fetchPlanets = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:4000/api/planets');\n//         setPlanets(response.data);\n//       } catch (error) {\n//         console.error('Error fetching planets:', error);\n//       }\n//     };\n//     fetchPlanets();\n//   }, []);\n\n//   // Handle search\n//   const handleSearch = async (e) => {\n//     e.preventDefault();\n//     if (keyword.trim() === '') {\n//       setSearchResults([]);\n//       return;\n//     }\n//     try {\n//       const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${keyword}`);\n//       setSearchResults(response.data);\n//     } catch (error) {\n//       console.error('Error searching planets:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Planets Catalog</h1>\n//       <form onSubmit={handleSearch}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search planets...\"\n//           value={keyword}\n//           onChange={(e) => setKeyword(e.target.value)}\n//         />\n//         <button type=\"submit\">Search</button>\n//       </form>\n//       <div>\n//         {searchResults.length > 0 ? (\n//           <div>\n//             <h2>Search Results:</h2>\n//             <ul>\n//               {searchResults.map((planet) => (\n//                 <li key={planet._id}>\n//                   <h3>{planet.name}</h3>\n//                   <p>Climate: {planet.climate}</p>\n//                   <p>Terrain: {planet.terrain}</p>\n//                   <p>Population: {planet.population}</p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         ) : (\n//           <div>\n//             <h2>All Planets:</h2>\n//             <ul>\n//               {planets.map((planet) => (\n//                 <li key={planet._id}>\n//                   <h3>{planet.name}</h3>\n//                   <p>Climate: {planet.climate}</p>\n//                   <p>Terrain: {planet.terrain}</p>\n//                   <p>Population: {planet.population}</p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchPlanets();\n  }, []);\n  const fetchPlanets = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/planets');\n      setPlanets(response.data);\n    } catch (error) {\n      console.error('Error fetching planets:', error);\n    }\n  };\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${searchTerm}`);\n      setPlanets(response.data);\n    } catch (error) {\n      console.error('Error searching for planets:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Planets Catalog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name, climate, terrain, or population\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: planets.map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planet-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: planet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Climate:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 28\n          }, this), \" \", planet.climate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Terrain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 28\n          }, this), \" \", planet.terrain]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Population:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 28\n          }, this), \" \", planet.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)]\n      }, planet._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"Pg6WhFl7w3+Rj8opPEAYO8I/bG8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Home","_s","planets","setPlanets","searchTerm","setSearchTerm","fetchPlanets","response","get","data","error","console","handleSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","planet","className","name","climate","terrain","population","_id","_c","$RefreshReg$"],"sources":["/Users/dilnaz/Documents/GitHub/task1/client/src/pages/Home.js"],"sourcesContent":["// // // src/pages/Home.js\n// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n\n// // const Home = () => {\n// //   const [planets, setPlanets] = useState([]);\n// //   const [keyword, setKeyword] = useState('');\n// //   const [searchResults, setSearchResults] = useState([]);\n\n// //   // Fetch all planets when the component mounts\n// //   useEffect(() => {\n// //     const fetchPlanets = async () => {\n// //       try {\n// //         const response = await axios.get('http://localhost:4000/api/planets');\n// //         setPlanets(response.data);\n// //       } catch (error) {\n// //         console.error('Error fetching planets:', error);\n// //       }\n// //     };\n// //     fetchPlanets();\n// //   }, []);\n\n// //   // Handle search\n// //   const handleSearch = async (e) => {\n// //     e.preventDefault();\n// //     if (keyword.trim() === '') {\n// //       setSearchResults([]);\n// //       return;\n// //     }\n// //     try {\n// //       const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${keyword}`);\n// //       setSearchResults(response.data);\n// //     } catch (error) {\n// //       console.error('Error searching planets:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h1>Planets Catalog</h1>\n// //       <form onSubmit={handleSearch}>\n// //         <input\n// //           type=\"text\"\n// //           placeholder=\"Search planets...\"\n// //           value={keyword}\n// //           onChange={(e) => setKeyword(e.target.value)}\n// //         />\n// //         <button type=\"submit\">Search</button>\n// //       </form>\n// //       <div>\n// //         {searchResults.length > 0 ? (\n// //           <div>\n// //             <h2>Search Results:</h2>\n// //             <ul>\n// //               {searchResults.map((planet) => (\n// //                 <li key={planet._id}>\n// //                   <h3>{planet.name}</h3>\n// //                   <p>Climate: {planet.climate}</p>\n// //                   <p>Terrain: {planet.terrain}</p>\n// //                   <p>Population: {planet.population}</p>\n// //                 </li>\n// //               ))}\n// //             </ul>\n// //           </div>\n// //         ) : (\n// //           <div>\n// //             <h2>All Planets:</h2>\n// //             <ul>\n// //               {planets.map((planet) => (\n// //                 <li key={planet._id}>\n// //                   <h3>{planet.name}</h3>\n// //                   <p>Climate: {planet.climate}</p>\n// //                   <p>Terrain: {planet.terrain}</p>\n// //                   <p>Population: {planet.population}</p>\n// //                 </li>\n// //               ))}\n// //             </ul>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Home;\n// // src/pages/Home.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Home = () => {\n//   const [planets, setPlanets] = useState([]);\n//   const [keyword, setKeyword] = useState('');\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   // Fetch all planets when the component mounts\n//   useEffect(() => {\n//     const fetchPlanets = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:4000/api/planets');\n//         setPlanets(response.data);\n//       } catch (error) {\n//         console.error('Error fetching planets:', error);\n//       }\n//     };\n//     fetchPlanets();\n//   }, []);\n\n//   // Handle search\n//   const handleSearch = async (e) => {\n//     e.preventDefault();\n//     if (keyword.trim() === '') {\n//       setSearchResults([]);\n//       return;\n//     }\n//     try {\n//       const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${keyword}`);\n//       setSearchResults(response.data);\n//     } catch (error) {\n//       console.error('Error searching planets:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Planets Catalog</h1>\n//       <form onSubmit={handleSearch}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search planets...\"\n//           value={keyword}\n//           onChange={(e) => setKeyword(e.target.value)}\n//         />\n//         <button type=\"submit\">Search</button>\n//       </form>\n//       <div>\n//         {searchResults.length > 0 ? (\n//           <div>\n//             <h2>Search Results:</h2>\n//             <ul>\n//               {searchResults.map((planet) => (\n//                 <li key={planet._id}>\n//                   <h3>{planet.name}</h3>\n//                   <p>Climate: {planet.climate}</p>\n//                   <p>Terrain: {planet.terrain}</p>\n//                   <p>Population: {planet.population}</p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         ) : (\n//           <div>\n//             <h2>All Planets:</h2>\n//             <ul>\n//               {planets.map((planet) => (\n//                 <li key={planet._id}>\n//                   <h3>{planet.name}</h3>\n//                   <p>Climate: {planet.climate}</p>\n//                   <p>Terrain: {planet.terrain}</p>\n//                   <p>Population: {planet.population}</p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Home = () => {\n    const [planets, setPlanets] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        fetchPlanets();\n    }, []);\n\n    const fetchPlanets = async () => {\n        try {\n            const response = await axios.get('http://localhost:4000/api/planets');\n            setPlanets(response.data);\n        } catch (error) {\n            console.error('Error fetching planets:', error);\n        }\n    };\n\n    const handleSearch = async () => {\n        try {\n            const response = await axios.get(`http://localhost:4000/api/planets/search?keyword=${searchTerm}`);\n            setPlanets(response.data);\n        } catch (error) {\n            console.error('Error searching for planets:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Planets Catalog</h1>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search by name, climate, terrain, or population\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <button onClick={handleSearch}>Search</button>\n            </div>\n            <div>\n                {planets.map((planet) => (\n                    <div key={planet._id} className=\"planet-box\">\n                        <h2>{planet.name}</h2>\n                        <p><strong>Climate:</strong> {planet.climate}</p>\n                        <p><strong>Terrain:</strong> {planet.terrain}</p>\n                        <p><strong>Population:</strong> {planet.population}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZU,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}